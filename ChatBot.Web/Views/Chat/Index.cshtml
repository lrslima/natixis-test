@using Microsoft.AspNetCore.SignalR.Client

<div class="container">

    <form method="post" asp-controller="Chat" asp-action="SendMessage" id="chatForm">

        <div class="col-md-12">

            <ul id="chatMessages"></ul>

            <br />

            <label> Mensagem :</label>
            <input type="text" id="message" name="message" style="width:500px" />
            <button id="sendButton" type="submit" disabled>Send</button>

        </div>

    </form>
</div>

@section Scripts {
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="@Url.Content("https://cdn.jsdelivr.net/npm/@microsoft/signalr@5.0.11/dist/browser/signalr.min.js")"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("https://localhost:7072/ChatHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();

    const messageInput = document.getElementById("message");
    const sendButton = document.getElementById("sendButton");
    const chatForm = document.getElementById("chatForm");

    messageInput.addEventListener("input", event => {
        sendButton.disabled = !event.target.value;
    });

    chatForm.addEventListener("submit", event => {
        event.preventDefault();
        const message = document.getElementById("message").value;
        $.ajax({
            type: "POST",
            url: "/Chat/SendMessage",
            data: {
                message: message
            },
            success: function() {
                document.getElementById("message").value = "";
                sendButton.disabled = true;
                getMessages();
            },
            error: function() {
                console.error("Erro ao enviar mensagem para o servidor.");
            }
        });
    });

    connection.on("ReceiveMessage", (user, message) => {
        const chatMessages = document.getElementById("chatMessages");
        const li = document.createElement("li");
        li.textContent = `${user}: ${message}`;
        chatMessages.appendChild(li);
    });

    connection.start().then(() => {
        sendButton.disabled = true;
        getMessages();
    }).catch(error => {
        console.error(error);
    });

    const getMessages = async () => {
        const response = await fetch("/chatMessages/50");

            if(response.ok)
            {
                response.json().then(messages => {
                    
                 console.log('messages', messages);

                const chatMessages = document.getElementById("chatMessages");
                messages.forEach(message => {
                    const li = document.createElement("li");
                    li.textContent = `${message}`;
                    chatMessages.appendChild(li);
                });

                }).catch(error => {
                    console.error(error);
                });

            }
    };
</script>
}